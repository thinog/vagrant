$mysql_script = <<-SCRIPT
    apt-get update && \
    apt-get install -y mysql-server-5.7 && \
    mysql -e "CREATE USER 'mysqluser'@'%' IDENTIFIED BY 'pass';"
    mysql -e "GRANT ALL PRIVILEGES ON * . * TO 'mysqluser'@'%';"
SCRIPT

Vagrant.configure("2") do |config|   
    config.vm.box = "ubuntu/bionic64"
    #config.vm.boot_timeout = 600

    config.vm.provider "virtualbox" do |vb|
        vb.memory = 512
        vb.cpus = 1
    end

    ### MySQL machine provisioned by Shell ###
    config.vm.define "mysqltest" do |mysqltest|
        # Network #
        mysqltest.vm.network "public_network", ip: "192.168.15.25"            
        #mysqltest.vm.network "private_network", ip: "192.168.16.10"
        #mysqltest.vm.network "private_network", type: "dhcp"    
        
        # Provision #
        mysqltest.vm.provision "shell", 
            inline: "cat /configs/bionic_key.pub >> .ssh/authorized_keys"
        
        mysqltest.vm.provision "shell", inline: $mysql_script

        mysqltest.vm.provision "shell", 
            inline: "cat /configs/mysqld.cnf > /etc/mysql/mysql.conf.d/mysqld.cnf"
                
        mysqltest.vm.provision "shell", 
            inline: "service mysql restart"
        
        # Synced Folder #
        mysqltest.vm.synced_folder "./configs", "/configs"
        mysqltest.vm.synced_folder ".", "/vagrant", disabled: true
    end

    ### PHP machine provisioned by Puppet ###
    config.vm.define "web" do |web|
        web.vm.provider "virtualbox" do |vb|
            vb.memory = 1024
            vb.cpus = 2
            vb.name = "bionic_web_server"
        end
        
        # Network #
        web.vm.network "forwarded_port", guest: 8888, host: 8888
        web.vm.network "public_network", ip: "192.168.15.26"

        # Provision #
        web.vm.provision "shell", 
            inline: "apt-get update && apt-get install -y puppet"

        web.vm.provision "puppet" do |puppet|
            puppet.manifests_path = "./configs/puppet"
            puppet.manifest_file = "phpweb.pp"
        end
    end

    ### MySQL machine provisioned by Ansible ###
    config.vm.define "dbserver" do |dbserver| 
        dbserver.vm.provider "virtualbox" do |vb|
            vb.name = "bionic_db_server"
        end
        
        # Network #
        dbserver.vm.network "public_network", ip: "192.168.15.27"

        # Provision #
        dbserver.vm.provision "shell", 
            inline: "cat /vagrant/configs/bionic_key.pub >> .ssh/authorized_keys"

        # Can not run directly because Ansible does not work well on Windows
        # config.vm.provision "ansible" do |ansible|
        #     ansible.inventory_path = "./configs/ansible/hosts"
        #     ansible.playbook = "./configs/ansible/playbook.yml"
        # end
    end

    ### Linux machine created to run Ansible (Ansible does not work well on Windows) ###
    config.vm.define "ansible" do |ansible| 
        # Network #
        ansible.vm.network "public_network", ip: "192.168.15.28"
        
        # Provision #
        ansible.vm.provision "shell", path: "./configs/config_ansible.sh"

        ansible.vm.provision "shell", 
            inline: "ansible-playbook -i /vagrant/configs/ansible/hosts /vagrant/configs/ansible/playbook.yml"
    end
    
    config.vm.define "memcached" do |memcached|
        memcached.vm.box = "centos/7"

        memcached.vm.provider "virtualbox" do |vb|
            vb.name = "centos_memcached"
        end
    end

    config.vm.define "dockerhost" do |dockerhost|
        ### TODO: add support to hyper-v
        # dockerhost.vm.provider "hyperv" do |hv|
        #     hv.name = "ubuntu_docker_host"
        # end

        dockerhost.vm.provision "shell", 
            inline: "apt-get update && apt-get install -y docker.io"
    end
end